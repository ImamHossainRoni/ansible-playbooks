---

- name: copy nginx default configuration
  template:
    src: nginx-default-server.j2
    dest: /etc/nginx/sites-available/common-server
  notify:
    - reload nginx

# We only copy the default configuration if we set up Certbot.  The default configuration makes
# nginx listen on port 80, which may not be desired in some cases (e.g. for the load balancer),
# but it is required if we want to reply to ACME challenges (which the load balancer does in a
# different way, configured in the HAProxy configuration).
- name: enable nginx site configuration
  file:
    src: /etc/nginx/sites-available/common-server
    dest: /etc/nginx/sites-enabled/common-server
    state: link
  notify:
    - reload nginx

# Activate the nginx config so Certbot can authenticate cert requests.
- name: reload nginx if required
  meta: flush_handlers

- name: open HTTP port on the firewall
  ufw:
    rule: allow
    port: 80
    proto: tcp

- name: add certbot PPA
  apt_repository:
    repo: ppa:certbot/certbot

- name: install certbot apt package
  apt:
    update_cache: yes
    name: python-certbot-nginx

- name: Create Certbot webroot directory
  file:
    path: /var/www/certbot
    state: directory

- name: Create Certbot deploy hooks directory
  file:
    path: /etc/letsencrypt/renewal-hooks/deploy
    state: directory

- name: Copy the Certbot deploy hook to restart nginx on renewal
  copy:
    src: restart-nginx.sh
    dest: /etc/letsencrypt/renewal-hooks/deploy/restart-nginx.sh
    mode: 0755

- name: generate SSL certificate with certbot
  shell: >-
    certbot certonly
    --webroot
    --webroot-path /var/www/certbot
    --domain {{ CERTBOT_DOMAIN_NAME }}
    {% for domain in CERTBOT_ADDITIONAL_DOMAINS %}
    --domain {{ domain }}
    {% endfor %}
    --email {{ CERTBOT_OPS_EMAIL }}
    --non-interactive
    --agree-tos
  args:
    creates: "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"
